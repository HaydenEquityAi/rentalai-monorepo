"""Add HUD tables

Revision ID: f30573497d96
Revises: db50891cf06b
Create Date: 2025-10-25 12:16:22.587512

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f30573497d96'
down_revision: Union[str, None] = 'db50891cf06b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=255), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=50), nullable=True),
    sa.Column('emergency_contact_relationship', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tenant_active', 'tenants', ['is_active'], unique=False)
    op.create_index('idx_tenant_email', 'tenants', ['email'], unique=False)
    op.create_index('idx_tenant_org', 'tenants', ['org_id'], unique=False)
    op.create_index(op.f('ix_tenants_email'), 'tenants', ['email'], unique=False)
    op.create_index(op.f('ix_tenants_org_id'), 'tenants', ['org_id'], unique=False)
    op.create_table('reac_inspections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('inspection_date', sa.Date(), nullable=False),
    sa.Column('inspection_type', sa.String(length=20), nullable=False),
    sa.Column('overall_score', sa.Integer(), nullable=True),
    sa.Column('inspection_status', sa.String(length=20), nullable=False),
    sa.Column('deficiencies_count', sa.Integer(), nullable=False),
    sa.Column('critical_deficiencies', sa.Integer(), nullable=False),
    sa.Column('report_url', sa.String(length=500), nullable=True),
    sa.Column('next_inspection_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reac_date', 'reac_inspections', ['inspection_date'], unique=False)
    op.create_index('idx_reac_property', 'reac_inspections', ['property_id'], unique=False)
    op.create_index('idx_reac_score', 'reac_inspections', ['overall_score'], unique=False)
    op.create_index('idx_reac_status', 'reac_inspections', ['inspection_status'], unique=False)
    op.create_index('idx_reac_type', 'reac_inspections', ['inspection_type'], unique=False)
    op.create_index(op.f('ix_reac_inspections_property_id'), 'reac_inspections', ['property_id'], unique=False)
    op.create_table('utility_allowances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('bedroom_count', sa.Integer(), nullable=False),
    sa.Column('heating', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('cooking', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('lighting', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('water_sewer', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('trash', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('total_allowance', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ua_bedrooms', 'utility_allowances', ['bedroom_count'], unique=False)
    op.create_index('idx_ua_effective_date', 'utility_allowances', ['effective_date'], unique=False)
    op.create_index('idx_ua_org_property', 'utility_allowances', ['org_id', 'property_id'], unique=False)
    op.create_index(op.f('ix_utility_allowances_org_id'), 'utility_allowances', ['org_id'], unique=False)
    op.create_index(op.f('ix_utility_allowances_property_id'), 'utility_allowances', ['property_id'], unique=False)
    op.create_table('tenant_income_certifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('unit_id', sa.UUID(), nullable=True),
    sa.Column('certification_date', sa.Date(), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('cert_type', sa.String(length=20), nullable=False),
    sa.Column('household_size', sa.Integer(), nullable=False),
    sa.Column('annual_income', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('adjusted_income', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('tenant_rent_portion', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('utility_allowance', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('subsidy_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('certification_status', sa.String(length=20), nullable=False),
    sa.Column('hud_50059_submitted', sa.Boolean(), nullable=False),
    sa.Column('hud_50059_submission_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tic_effective_date', 'tenant_income_certifications', ['effective_date'], unique=False)
    op.create_index('idx_tic_org_property', 'tenant_income_certifications', ['org_id', 'property_id'], unique=False)
    op.create_index('idx_tic_org_tenant', 'tenant_income_certifications', ['org_id', 'tenant_id'], unique=False)
    op.create_index('idx_tic_status', 'tenant_income_certifications', ['certification_status'], unique=False)
    op.create_index('idx_tic_type', 'tenant_income_certifications', ['cert_type'], unique=False)
    op.create_index(op.f('ix_tenant_income_certifications_org_id'), 'tenant_income_certifications', ['org_id'], unique=False)
    op.create_index(op.f('ix_tenant_income_certifications_property_id'), 'tenant_income_certifications', ['property_id'], unique=False)
    op.create_index(op.f('ix_tenant_income_certifications_tenant_id'), 'tenant_income_certifications', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_tenant_income_certifications_unit_id'), 'tenant_income_certifications', ['unit_id'], unique=False)
    op.create_table('household_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tic_id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('ssn_last_4', sa.String(length=4), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('relationship_type', sa.String(length=20), nullable=False),
    sa.Column('is_student', sa.Boolean(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('annual_income', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tic_id'], ['tenant_income_certifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_hm_relationship_type', 'household_members', ['relationship_type'], unique=False)
    op.create_index('idx_hm_tic', 'household_members', ['tic_id'], unique=False)
    op.create_index(op.f('ix_household_members_tic_id'), 'household_members', ['tic_id'], unique=False)
    op.create_table('income_sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('household_member_id', sa.UUID(), nullable=False),
    sa.Column('income_type', sa.String(length=30), nullable=False),
    sa.Column('employer_name', sa.String(length=255), nullable=True),
    sa.Column('monthly_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('annual_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('verification_type', sa.String(length=30), nullable=False),
    sa.Column('verification_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['household_member_id'], ['household_members.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_is_hm', 'income_sources', ['household_member_id'], unique=False)
    op.create_index('idx_is_type', 'income_sources', ['income_type'], unique=False)
    op.create_index('idx_is_verification', 'income_sources', ['verification_type'], unique=False)
    op.create_index(op.f('ix_income_sources_household_member_id'), 'income_sources', ['household_member_id'], unique=False)
    op.add_column('leases', sa.Column('tenant_id', sa.UUID(), nullable=False))
    op.create_index('idx_lease_tenant', 'leases', ['tenant_id'], unique=False)
    op.create_foreign_key(None, 'leases', 'tenants', ['tenant_id'], ['id'])
    op.drop_column('leases', 'tenant_phone')
    op.drop_column('leases', 'tenant_last_name')
    op.drop_column('leases', 'tenant_first_name')
    op.drop_column('leases', 'tenant_email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('leases', sa.Column('tenant_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('leases', sa.Column('tenant_first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('leases', sa.Column('tenant_last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('leases', sa.Column('tenant_phone', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'leases', type_='foreignkey')
    op.drop_index('idx_lease_tenant', table_name='leases')
    op.drop_column('leases', 'tenant_id')
    op.drop_index(op.f('ix_income_sources_household_member_id'), table_name='income_sources')
    op.drop_index('idx_is_verification', table_name='income_sources')
    op.drop_index('idx_is_type', table_name='income_sources')
    op.drop_index('idx_is_hm', table_name='income_sources')
    op.drop_table('income_sources')
    op.drop_index(op.f('ix_household_members_tic_id'), table_name='household_members')
    op.drop_index('idx_hm_tic', table_name='household_members')
    op.drop_index('idx_hm_relationship_type', table_name='household_members')
    op.drop_table('household_members')
    op.drop_index(op.f('ix_tenant_income_certifications_unit_id'), table_name='tenant_income_certifications')
    op.drop_index(op.f('ix_tenant_income_certifications_tenant_id'), table_name='tenant_income_certifications')
    op.drop_index(op.f('ix_tenant_income_certifications_property_id'), table_name='tenant_income_certifications')
    op.drop_index(op.f('ix_tenant_income_certifications_org_id'), table_name='tenant_income_certifications')
    op.drop_index('idx_tic_type', table_name='tenant_income_certifications')
    op.drop_index('idx_tic_status', table_name='tenant_income_certifications')
    op.drop_index('idx_tic_org_tenant', table_name='tenant_income_certifications')
    op.drop_index('idx_tic_org_property', table_name='tenant_income_certifications')
    op.drop_index('idx_tic_effective_date', table_name='tenant_income_certifications')
    op.drop_table('tenant_income_certifications')
    op.drop_index(op.f('ix_utility_allowances_property_id'), table_name='utility_allowances')
    op.drop_index(op.f('ix_utility_allowances_org_id'), table_name='utility_allowances')
    op.drop_index('idx_ua_org_property', table_name='utility_allowances')
    op.drop_index('idx_ua_effective_date', table_name='utility_allowances')
    op.drop_index('idx_ua_bedrooms', table_name='utility_allowances')
    op.drop_table('utility_allowances')
    op.drop_index(op.f('ix_reac_inspections_property_id'), table_name='reac_inspections')
    op.drop_index('idx_reac_type', table_name='reac_inspections')
    op.drop_index('idx_reac_status', table_name='reac_inspections')
    op.drop_index('idx_reac_score', table_name='reac_inspections')
    op.drop_index('idx_reac_property', table_name='reac_inspections')
    op.drop_index('idx_reac_date', table_name='reac_inspections')
    op.drop_table('reac_inspections')
    op.drop_index(op.f('ix_tenants_org_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_email'), table_name='tenants')
    op.drop_index('idx_tenant_org', table_name='tenants')
    op.drop_index('idx_tenant_email', table_name='tenants')
    op.drop_index('idx_tenant_active', table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
